services:
  # Рестарт nginx для перечитки конфигов:
  # docker compose exec nginx nginx -s reload
  nginx:
    container_name: nginx
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - "80:80" # Порт по умолчанию для http запросов.
      - "443:443" # Порт по умолчанию для https запросов.
      #depends_on:
      #- api-gateway
      # - mongo-express
    volumes:
      # Копируем папку с конфигами для nginx, чтобы конфиги были доступны из контейнера в момент запуска nginx.
      # Настройка файловых хранилищ для взаимодействия нескольких контейнеров.
      # Папки сертификатов, которые нужно читать nginx, чтобы обеспечивать https. ro - только чтение.
      # Слева - локальный путь на хост машине, где расположен сервер (!). Справа - путь, который создастся внутри докер контейнера.
      - www-certbot:/var/www/certbot/:ro
      - etc-letsencrypt:/etc/letsencrypt:ro
    
    # При развертывании на целевой машине, нужно проверить и получить сертификаты.
    # Проверка certbot из контейнера командой в терминале:
    # docker compose run --rm  certbot certonly --webroot --webroot-path /var/www/certbot/ --dry-run -d server.cyber-cat.pro (тут адрес сервера).
    # --rm - удалить контейнер после завершения
    # --webroot --webroot-path - путь куда кладутся сертификаты
    # --dry-run - тестовый прогон. Проверяет, что можно выдать сертификат, но не выдает его. Потому что можно получить не больше N сертификатов в неделю
    # -d - адрес, который проверяем
    # Ещё доп. параметры:
    # --email email@email
    # --agree-tos - авто-принятие всех лицензий
    # --no-eff-email - не делиться имейлом с EEF

    # Получение сертификата (не забудьте потом перезапустить nginx) Да вроде бы не надо?:
    # docker compose run --rm  certbot certonly --webroot --webroot-path /var/www/certbot/ -d server.cyber-cat.pro
    # То же что и выше, но без --dry-run
  certbot:
    image: certbot/certbot:latest
    depends_on:
      - nginx
    volumes:
      # Папки, куда certbot положит сертификаты после проверки. rw - чтение и запись.
      - www-certbot:/var/www/certbot/:rw
      - etc-letsencrypt:/etc/letsencrypt/:rw
  
  api-gateway:
    image: api-gateway
    container_name: api-gateway
    build:
      context: .
      dockerfile: ApiGateway/ApiGateway/Dockerfile
    environment:
      - ASPNETCORE_URLS=
      - Kestrel__EndPoints__Http__Url=$API_GATEWAY_URL
      - ConnectionStrings__AuthServiceGrpcEndpoint=$AUTH_SERVICE_GRPC_URL
      - ConnectionStrings__TaskServiceGrpcEndpoint=$TASK_SERVICE_GRPC_URL
      - ConnectionStrings__SolutionServiceGrpcEndpoint=$SOLUTION_SERVICE_GRPC_URL
      - ConnectionStrings__JudgeServiceGrpcEndpoint=$JUDGE_SERVICE_GRPC_URL
      #ports:
      # - "80:5000"
    depends_on:
      - auth-service
      - task-service
      - solution-service
  
  auth-service:
    image: auth-service
    container_name: $AUTH_SERVICE_NAME
    build:
      context: .
      dockerfile: AuthService/AuthService/Dockerfile
    environment:
      - ASPNETCORE_URLS=
      - Kestrel__EndPoints__Grpc__Url=$AUTH_SERVICE_GRPC_ENDPOINT
      - Kestrel__EndPoints__Grpc__Protocols=Http2
      - MongoRepository__ConnectionString=$MONGO_DB_URL
      - MongoRepository__DatabaseName=$DATABASE_NAME
    depends_on:
      - mongo
  
  task-service:
    image: task-service
    container_name: $TASK_SERVICE_NAME
    build:
      context: .
      dockerfile: TaskService/TaskService/Dockerfile
    environment:
      - ASPNETCORE_URLS=
      - Kestrel__EndPoints__Grpc__Url=$TASK_SERVICE_GRPC_ENDPOINT
      - Kestrel__EndPoints__Grpc__Protocols=Http2
      - MongoRepository__ConnectionString=$MONGO_DB_URL
      - MongoRepository__DatabaseName=$DATABASE_NAME
    depends_on:
      - mongo
  
  solution-service:
    image: solution-service
    container_name: $SOLUTION_SERVICE_NAME
    build:
      context: .
      dockerfile: SolutionService/SolutionService/Dockerfile
    environment:
      - ASPNETCORE_URLS=
      - Kestrel__EndPoints__Grpc__Url=$SOLUTION_SERVICE_GRPC_URL
      - Kestrel__EndPoints__Grpc__Protocols=Http2
      - MongoRepository__ConnectionString=$MONGO_DB_URL
      - MongoRepository__DatabaseName=$DATABASE_NAME
    depends_on:
      - mongo
  
  mongo:
    image: mongo:5.0.15
    container_name: $MONGO_DB_CONTAINER_NAME

volumes:
  nginx-conf:
  www-certbot:
  etc-letsencrypt: