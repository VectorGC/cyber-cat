{
  "sample_tests": {
    "id": 1,
    "name": "Олимпиада 2022",
    "folder_name": "sample_tests",
    "units": {
      "unit-0": {
        "name": "Пробные задачи",
        "folder_name": "unit-0",
        "tasks": {
          "task-1": {
            "id": 13,
            "number": 0,
            "unit_id": 1,
            "project_id": 1,
            "name": "Hello world!",
            "desc": "Вывести строку: Hello world!",
            "folder_name": "task-1",
            "input": [],
            "output": "Строка: Hello world!",
            "score": 0,
            "completion": 0
          }
        }
      },
      "unit-1": {
        "name": "Лёгкий уровень",
        "folder_name": "unit-1",
        "tasks": {
          "task-1": {
            "id": 14,
            "number": 0,
            "unit_id": 2,
            "project_id": 1,
            "name": "Последовательность Фибоначчи",
            "desc": "На вход подаётся некоторое целое число N от 1 до 1000. Необходимо написать программу, которая выводит на экран N-е число Фибоначчи. Например, если на вход подается число 4, то программа должна вывести на экран цифру 2, т.к. 2 является 4-ым числом в последовательности Фибоначчи. Примечание: первые два числа в последовательности Фибоначчи – это 0 и 1, а каждое последующее является суммой двух предыдущих: F(0)=0, F(1)=1, F(n)=F(n-1)+F(n-2)",
            "folder_name": "task-1",
            "input": [
              {
                "name": "Number",
                "type": "int",
                "dimensions": [
                  1
                ],
                "range": [
                  "1",
                  "1000"
                ]
              }
            ],
            "output": "N-е число Фибоначчи",
            "score": 1,
            "completion": 0
          },
          "task-2": {
            "id": 15,
            "number": 0,
            "unit_id": 2,
            "project_id": 1,
            "name": "Поиск аудитории по номеру студента",
            "desc": "На экзамен по программированию в Военмехе пришли студенты, которых распределили по аудиториям. В каждую аудиторию помещается N человек. Таким образом в первой аудитории находятся экзаменуемые c первого по N, во второй аудитории с N+1 по 2*N. Внезапно преподаватель увидел, что студент под номером M в списке не сдал всех работ в течении семестра и решил его выгнать. На вход подаётся два числа: вместимость аудитории N и номер студента M. Нужно вывести номер аудитории, в которой сидит студент M.",
            "folder_name": "task-2",
            "input": [
              {
                "name": "N",
                "type": "int",
                "dimensions": [
                  1
                ],
                "range": [
                  "1",
                  "1000"
                ]
              },
              {
                "name": "M",
                "type": "int",
                "dimensions": [
                  1
                ],
                "range": [
                  "1",
                  "1000"
                ]
              }
            ],
            "output": "Номер аудитории",
            "score": 1,
            "completion": 0
          },
          "task-3": {
            "id": 16,
            "number": 0,
            "unit_id": 2,
            "project_id": 1,
            "name": "Зеркальное число",
            "desc": "Вам требуется написать программу, которая отзеркаливает вводимое натуральное число. Например для числа 12345 результат будет 54321. Если число оканчивается нулями, то они не отображаются: 12340500 будет 504321",
            "folder_name": "task-3",
            "input": [
              {
                "name": "Number",
                "type": "int",
                "dimensions": [
                  1
                ],
                "range": [
                  "1",
                  "100000"
                ]
              }
            ],
            "output": "Отзеркаленное число",
            "score": 1,
            "completion": 0
          },
          "task-4": {
            "id": 17,
            "number": 0,
            "unit_id": 2,
            "project_id": 1,
            "name": "Простые числа",
            "desc": "Напишите программу, которая получает на вход число N и выводит на экран строку \"true\" если число N простое или строку \"false\", если число N не является простым. Примечание: Простое число – это натуральное число больше 1, которое не имеет положительных делителей, кроме 1 и самого себя.",
            "folder_name": "task-4",
            "input": [
              {
                "name": "N",
                "type": "int",
                "dimensions": [
                  1
                ],
                "range": [
                  "2",
                  "100000"
                ]
              }
            ],
            "output": "Простое число или нет",
            "score": 1,
            "completion": 0
          },
          "task-5": {
            "id": 18,
            "number": 0,
            "unit_id": 2,
            "project_id": 1,
            "name": "Будильник",
            "desc": "Студент, устав от решения задач, решил поспать подольше, поставив будильник на 12 часов будущего дня и уже в 21 час уснул. Однако, забыв о том, что на его циферблате всего 12 часов, он услышал звонок уже через 3 часа. Напишите программу для незадачливого студента, которая поможет ему понять сколько часов он сможет поспать. Входные данные: время отхода ко сну и время звонка будильника (0 ≤ T часов ≤ 12 и 0 ≤ t минут ≤ 59). Вывести время в формате часы:минуты, например: 4:31",
            "folder_name": "task-5",
            "input": [
              {
                "name": "bedHours",
                "type": "int",
                "dimensions": [
                  1
                ],
                "range": [
                  "1",
                  "12"
                ]
              },
              {
                "name": "bedMinutes",
                "type": "int",
                "dimensions": [
                  1
                ],
                "range": [
                  "0",
                  "59"
                ]
              },
              {
                "name": "alarmHours",
                "type": "int",
                "dimensions": [
                  1
                ],
                "range": [
                  "1",
                  "12"
                ]
              },
              {
                "name": "alarmMinutes",
                "type": "int",
                "dimensions": [
                  1
                ],
                "range": [
                  "0",
                  "59"
                ]
              }
            ],
            "output": "Время в формате часы:минуты, например: 4:31",
            "score": 1,
            "completion": 0
          },
          "task-6": {
            "id": 19,
            "number": 0,
            "unit_id": 2,
            "project_id": 1,
            "name": "Кратные 3 или 5",
            "desc": "Если мы перечислим все натуральные числа до 10, кратные 3 или 5, мы получим 3, 5, 6 и 9. Сумма этих кратных равна 23. Необходимо реализовать программу, которая будет выводить на экран сумму всех натуральных чисел, кратных 3 или 5, меньше заданного числа N. Если число N отрицательное, то программа должна выводить 0. Например, если на вход программе подать цифру 10, то на экран должна быть выведена цифра 23. Примечание: если число кратно 3 и 5, то его необходимо считать только 1 раз. ",
            "folder_name": "task-6",
            "input": [
              {
                "name": "N",
                "type": "int",
                "dimensions": [
                  1
                ],
                "range": [
                  "-100",
                  "100000"
                ]
              }
            ],
            "output": "Сумма кратных",
            "score": 1,
            "completion": 0
          }
        }
      },
      "unit-2": {
        "name": "Cредний уровень",
        "folder_name": "unit-2",
        "tasks": {
          "task-1": {
            "id": 20,
            "number": 0,
            "unit_id": 3,
            "project_id": 1,
            "name": "Журнал оценок",
            "desc": "Есть школьный журнал одного класса. Каждая страница журнала содержит оценки N учеников за М уроков по одному предмету (в каждой строке – оценки одного ученика, в каждой колонке – оценки за один урок). В журнале L страниц – по количеству изучаемых школьниками предметов. Определить, есть ли в классе ученики, которые учатся только на «хорошо» и «отлично».\nНа вход подаётся: количество учеников N, количество уроков M, количество страниц L, NxMxN оценок.\nВывести индексы (начинаются с нуля) учеников, у которых есть только оценки 4 или 5. Индексы разделять через вертикальный слеш. Пример: 1|7|18| Если таких учеников нет, то вывести минус: -",
            "folder_name": "task-1",
            "input": [
              {
                "name": "A",
                "type": "int",
                "dimensions": [
                  20,
                  64,
                  12
                ],
                "range": [
                  "3",
                  "5"
                ]
              }
            ],
            "output": "Вывести индексы учеников (N), у которых есть только оценки 4 или 5. Индексы разделять через вертикальный слеш. Пример: 1|7|18|\n Если таких учеников нет, то вывести минус: -",
            "score": 2,
            "completion": 0
          },
          "task-2": {
            "id": 21,
            "number": 0,
            "unit_id": 3,
            "project_id": 1,
            "name": "Блокнотик",
            "desc": "Блокнотик содержит L листов бумаги в клетку. На каждом листе NхM клеток (N строчек и M столбцов). Маленький мальчик заполнил этот блокнотик цифрами. Каждая цифра занимает одну клетку, свободных клеток мальчик не оставил. Известно, что чаще всего он писал свой возраст. Каков возраст мальчика и на какой странице соответствующая ему цифра встречается наибольшее число раз?\nНа вход подаётся: количество листов L, количество строчек N, количество клеток M, LxNxM чисел от 3 до 9. Вывести самую часто встречающуюся цифру и страницу (нумерация страниц начинается с 1), на которой она встречается больше всего раз. Привер вывода: 5|12|\nЕсли есть цифры встречаются одинаковое количество раз, то вывести наименьшую цифру.",
            "folder_name": "task-2",
            "input": [
              {
                "name": "A",
                "type": "int",
                "dimensions": [
                  24,
                  8,
                  12
                ],
                "range": [
                  "3",
                  "9"
                ]
              }
            ],
            "output": "Вывести самую часто встречающуюся цифру и страницу (нумерация страниц начинается с 1), на которой она встречается больше всего раз. Привер вывода: 5|12|\nЕсли есть цифры встречаются одинаковое количество раз, то вывести наименьшую цифру.",
            "score": 2,
            "completion": 0
          }
        }
      },
      "unit-3": {
        "name": "Сложный уровень",
        "folder_name": "unit-3",
        "tasks": {
          "task-1": {
            "id": 22,
            "number": 0,
            "unit_id": 4,
            "project_id": 1,
            "name": "Пирамида",
            "desc": "В массиве наименьший элемент поместить на первое место, наименьший из оставшихся – на последнее, следующий по величине – на второе, следующий – на предпоследнее и т.д. до середины массива. Все элементы массива должны различаться.\nНа вход подаётся: размер массива N, N элементов массива.\nВывести итоговый массив, разделяя элементы через вертикальный слеш, пример: 1|3|4|2|",
            "folder_name": "task-1",
            "input": [
              {
                "name": "A",
                "type": "int",
                "dimensions": [
                  27
                ],
                "range": [
                  "-100",
                  "100"
                ]
              }
            ],
            "output": "Вывести итоговый массив, разделяя элементы через вертикальный слеш, пример: 1|3|4|2|",
            "score": 5,
            "completion": 0
          }
        }
      }
    }
  }
}